{"version":3,"file":"applicationInsightsConfig.js","sourceRoot":"","sources":["../../src/applicationInsightsConfig.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAQlC;;EAEE;AACF,MAAa,yBAAyB;IAgBlC;;OAEG;IACH,IAAW,gBAAgB,CAAC,gBAAwB;QAChD,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IACxE,CAAC;IACD,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC;IAC5D,CAAC;IACD;;OAEG;IACH,IAAW,kBAAkB,CAAC,kBAAmC;QAC7D,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC5E,CAAC;IACD,IAAW,kBAAkB;QACzB,OAAO,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,CAAC;IAC9D,CAAC;IACD;;;OAGG;IACH,IAAW,qBAAqB,CAAC,qBAA8B;QAC3D,IAAI,CAAC,0BAA0B,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;IAClF,CAAC;IACD,IAAW,qBAAqB;QAC5B,OAAO,IAAI,CAAC,0BAA0B,CAAC,qBAAqB,CAAC;IACjE,CAAC;IACD;;;OAGG;IACH,IAAW,gBAAgB,CAAC,gBAAwB;QAChD,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IACxE,CAAC;IACD,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC;IAC5D,CAAC;IACD;;OAEG;IACH,IAAW,gBAAgB,CAAC,gBAAwC;QAChE,IAAI,CAAC,sBAAsB,GAAG,gBAAgB,CAAC;IACnD,CAAC;IACD,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACvC,CAAC;IAED;;;OAGG;IACI,qBAAqB;QACxB,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;OAGG;IACI,oBAAoB;QACvB,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;OAGG;IACI,mBAAmB;QACtB,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAvFD,8DAuFC","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport { TokenCredential } from \"@azure/core-auth\";\r\nimport { Resource } from \"@opentelemetry/resources\";\r\nimport { ApplicationInsightsOptions, LogInstrumentationsConfig } from \"./types\";\r\nimport { AzureMonitorExporterOptions } from \"@azure/monitor-opentelemetry-exporter\";\r\nimport { InstrumentationOptions } from \"@azure/monitor-opentelemetry\";\r\n\r\n/** \r\n* @deprecated Use ApplicationInsightsOptions instead\r\n*/\r\nexport class ApplicationInsightsConfig implements ApplicationInsightsOptions {\r\n    // ApplicationInsightsOptions\r\n    public enableAutoCollectExceptions?: boolean;\r\n    public extendedMetrics: { [type: string]: boolean };\r\n    public logInstrumentations?: LogInstrumentationsConfig;\r\n    // AzureMonitorOpenTelemetryOptions\r\n    public azureMonitorExporterConfig?: AzureMonitorExporterOptions;\r\n    public resource?: Resource;\r\n    public samplingRatio: number;\r\n    public enableAutoCollectPerformance: boolean;\r\n    public enableAutoCollectStandardMetrics: boolean;\r\n    public instrumentationOptions?: InstrumentationOptions;\r\n\r\n    // Deprecated\r\n    public enableAutoCollectHeartbeat: boolean;\r\n    \r\n    /** Connection String used to send telemetry payloads to\r\n     * @deprecated This config should not be used, use azureMonitorExporterConfig to configure Connection String\r\n     */\r\n    public set connectionString(connectionString: string) {\r\n        this.azureMonitorExporterConfig.connectionString = connectionString;\r\n    }\r\n    public get connectionString(): string {\r\n        return this.azureMonitorExporterConfig.connectionString;\r\n    }\r\n    /** AAD TokenCredential to use to authenticate the app\r\n     * @deprecated This config should not be used, use azureMonitorExporterConfig to configure aadTokenCredential\r\n     */\r\n    public set aadTokenCredential(aadTokenCredential: TokenCredential) {\r\n        this.azureMonitorExporterConfig.aadTokenCredential = aadTokenCredential;\r\n    }\r\n    public get aadTokenCredential() {\r\n        return this.azureMonitorExporterConfig.aadTokenCredential;\r\n    }\r\n    /**\r\n     * Disable offline storage when telemetry cannot be exported.\r\n     * @deprecated This config should not be used, use azureMonitorExporterConfig to configure disableOfflineStorage\r\n     */\r\n    public set disableOfflineStorage(disableOfflineStorage: boolean) {\r\n        this.azureMonitorExporterConfig.disableOfflineStorage = disableOfflineStorage;\r\n    }\r\n    public get disableOfflineStorage() {\r\n        return this.azureMonitorExporterConfig.disableOfflineStorage;\r\n    }\r\n    /**\r\n     * Directory to store retriable telemetry when it fails to export.\r\n     * @deprecated This config should not be used, use azureMonitorExporterConfig to configure storageDirectory\r\n     */\r\n    public set storageDirectory(storageDirectory: string) {\r\n        this.azureMonitorExporterConfig.storageDirectory = storageDirectory;\r\n    }\r\n    public get storageDirectory() {\r\n        return this.azureMonitorExporterConfig.storageDirectory;\r\n    }\r\n    /** \r\n     * @deprecated This config should not be used, use instrumentationOptions\r\n     */\r\n    public set instrumentations(instrumentations: InstrumentationOptions) {\r\n        this.instrumentationOptions = instrumentations;\r\n    }\r\n    public get instrumentations(): InstrumentationOptions {\r\n        return this.instrumentationOptions;\r\n    }\r\n\r\n    /**\r\n     * Get Instrumentation Key\r\n     * @deprecated This method should not be used\r\n     */\r\n    public getInstrumentationKey(): string {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Get Instrumentation Key\r\n     * @deprecated This method should not be used\r\n     */\r\n    public getIngestionEndpoint(): string {\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Get Instrumentation Key\r\n     * @deprecated This method should not be used\r\n     */\r\n    public getDisableStatsbeat(): boolean {\r\n        return false;\r\n    }\r\n}\r\n"]}