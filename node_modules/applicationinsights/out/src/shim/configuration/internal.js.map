{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../../src/shim/configuration/internal.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonConfig } from \"./jsonConfig\";\r\nimport { Logger } from \"../logging\";\r\nimport { ApplicationInsightsOptions, ExtendedMetricType, LogInstrumentationsConfig } from \"../../types\";\r\n\r\n\r\nexport class InternalConfig implements ApplicationInsightsOptions {\r\n    private _logInstrumentations: LogInstrumentationsConfig;\r\n    public enableAutoCollectExceptions: boolean;\r\n    public extendedMetrics: { [type: string]: boolean };\r\n\r\n    constructor(options?: ApplicationInsightsOptions) {\r\n        this.extendedMetrics = {};\r\n        // Load config values from env variables and JSON if available\r\n        this._loadDefaultValues();\r\n        this._mergeConfig();\r\n        // This will take precedence over other settings\r\n        if (options) {\r\n            this.enableAutoCollectExceptions =\r\n                options.enableAutoCollectExceptions || this.enableAutoCollectExceptions;\r\n            this.logInstrumentations = options.logInstrumentations || this.logInstrumentations;\r\n        }\r\n    }\r\n\r\n    public set logInstrumentations(value: LogInstrumentationsConfig) {\r\n        this._logInstrumentations = Object.assign(this._logInstrumentations, value);\r\n    }\r\n\r\n    public get logInstrumentations(): LogInstrumentationsConfig {\r\n        return this._logInstrumentations;\r\n    }\r\n\r\n    /**\r\n     * Get Instrumentation Key\r\n     * @deprecated This method should not be used\r\n     */\r\n    public getDisableStatsbeat(): boolean {\r\n        return false;\r\n    }\r\n\r\n    private _loadDefaultValues() {\r\n        this.enableAutoCollectExceptions =\r\n            this.enableAutoCollectExceptions !== undefined\r\n                ? this.enableAutoCollectExceptions\r\n                : true;\r\n        this._logInstrumentations = {\r\n            console: { enabled: false },\r\n            bunyan: { enabled: false },\r\n            winston: { enabled: false },\r\n        };\r\n        this.extendedMetrics[ExtendedMetricType.gc] = false;\r\n        this.extendedMetrics[ExtendedMetricType.heap] = false;\r\n        this.extendedMetrics[ExtendedMetricType.loop] = false;\r\n    }\r\n\r\n    private _mergeConfig() {\r\n        try {\r\n            const jsonConfig = JsonConfig.getInstance();\r\n            this.enableAutoCollectExceptions =\r\n                jsonConfig.enableAutoCollectExceptions !== undefined\r\n                    ? jsonConfig.enableAutoCollectExceptions\r\n                    : this.enableAutoCollectExceptions;\r\n            if (jsonConfig.logInstrumentations) {\r\n                if (\r\n                    jsonConfig.logInstrumentations.console &&\r\n                    jsonConfig.logInstrumentations.console.enabled !== undefined\r\n                ) {\r\n                    this.logInstrumentations.console.enabled =\r\n                        jsonConfig.logInstrumentations.console.enabled;\r\n                }\r\n                if (\r\n                    jsonConfig.logInstrumentations.bunyan &&\r\n                    jsonConfig.logInstrumentations.bunyan.enabled !== undefined\r\n                ) {\r\n                    this.logInstrumentations.bunyan.enabled =\r\n                        jsonConfig.logInstrumentations.bunyan.enabled;\r\n                }\r\n                if (\r\n                    jsonConfig.logInstrumentations.winston &&\r\n                    jsonConfig.logInstrumentations.winston.enabled !== undefined\r\n                ) {\r\n                    this.logInstrumentations.winston.enabled =\r\n                        jsonConfig.logInstrumentations.winston.enabled;\r\n                }\r\n            }\r\n            if (jsonConfig.extendedMetrics) {\r\n                if (jsonConfig.extendedMetrics[ExtendedMetricType.gc] !== undefined) {\r\n                    this.extendedMetrics[ExtendedMetricType.gc] =\r\n                        jsonConfig.extendedMetrics[ExtendedMetricType.gc];\r\n                }\r\n                if (jsonConfig.extendedMetrics[ExtendedMetricType.heap] !== undefined) {\r\n                    this.extendedMetrics[ExtendedMetricType.heap] =\r\n                        jsonConfig.extendedMetrics[ExtendedMetricType.heap];\r\n                }\r\n                if (jsonConfig.extendedMetrics[ExtendedMetricType.loop] !== undefined) {\r\n                    this.extendedMetrics[ExtendedMetricType.loop] =\r\n                        jsonConfig.extendedMetrics[ExtendedMetricType.loop];\r\n                }\r\n            }\r\n        } catch (error) {\r\n            Logger.getInstance().error(\"Failed to load JSON config file values.\", error);\r\n        }\r\n    }\r\n}\r\n"]}