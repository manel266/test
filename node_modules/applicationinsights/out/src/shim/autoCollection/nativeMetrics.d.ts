import { AzureMonitorOpenTelemetryOptions } from "@azure/monitor-opentelemetry";
/**
 * Azure Monitor Native Metrics
 * @internal
 */
export declare class NativeMetrics {
    private _emitter;
    private _handle;
    private _collectionInterval;
    private _meterProvider;
    private _azureExporter;
    private _metricReader;
    private _meter;
    private _eventLoopHistogram;
    private _garbageCollectionScavenge;
    private _garbageCollectionMarkSweepCompact;
    private _garbageCollectionIncrementalMarking;
    private _heapMemoryTotalGauge;
    private _heapMemoryUsageGauge;
    private _memoryUsageNonHeapGauge;
    private _options;
    /**
     * Initializes a new instance of the NativeMetrics class.
     * @param options - Distro configuration.
     * @param config - Native Metrics extra configuration.
     */
    constructor(options: AzureMonitorOpenTelemetryOptions, config?: {
        collectionInterval: number;
    });
    /**
     * Shutdown Meter Provider it will return no-op Meters after being called.
     */
    shutdown(): void;
    /**
     * Force flush Meter Provider.
     */
    flush(): Promise<void>;
    private _initialize;
    private _getHeapUsage;
    private _getHeapTotal;
    private _getNonHeapUsage;
    private _collectHistogramData;
    private _getEventLoopCpu;
    private _getGarbageCollection;
}
