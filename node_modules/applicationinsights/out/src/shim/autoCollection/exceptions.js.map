{"version":3,"file":"exceptions.js","sourceRoot":"","sources":["../../../../src/shim/autoCollection/exceptions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Util } from \"../util\";\r\nimport { TelemetryClient } from \"../telemetryClient\";\r\n\r\ntype ExceptionHandle = \"uncaughtExceptionMonitor\" | \"uncaughtException\" | \"unhandledRejection\";\r\nconst UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME: ExceptionHandle = \"uncaughtExceptionMonitor\";\r\nconst UNCAUGHT_EXCEPTION_HANDLER_NAME: ExceptionHandle = \"uncaughtException\";\r\nconst UNHANDLED_REJECTION_HANDLER_NAME: ExceptionHandle = \"unhandledRejection\";\r\nconst FALLBACK_ERROR_MESSAGE =\r\n    \"A promise was rejected without providing an error. Application Insights generated this error stack for you.\";\r\n\r\nexport class AutoCollectExceptions {\r\n    private _canUseUncaughtExceptionMonitor = false;\r\n    private _exceptionListenerHandle?: (error: Error | undefined) => void;\r\n    private _rejectionListenerHandle?: (error: Error | undefined) => void;\r\n    private _client: TelemetryClient;\r\n\r\n    constructor(client: TelemetryClient) {\r\n        this._client = client;\r\n        // Only use for 13.7.0+\r\n        const nodeVer = process.versions.node.split(\".\");\r\n        this._canUseUncaughtExceptionMonitor =\r\n            parseInt(nodeVer[0]) > 13 || (parseInt(nodeVer[0]) === 13 && parseInt(nodeVer[1]) >= 7);\r\n\r\n        // For scenarios like Promise.reject(), an error won't be passed to the handle. Create a placeholder\r\n        // error for these scenarios.\r\n        if (this._canUseUncaughtExceptionMonitor) {\r\n            // Node.js >= 13.7.0, use uncaughtExceptionMonitor. It handles both promises and exceptions\r\n            this._exceptionListenerHandle = this._handleException.bind(\r\n                this,\r\n                false,\r\n                UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME\r\n            ); // never rethrows\r\n            (<any>process).on(\r\n                UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME,\r\n                this._exceptionListenerHandle\r\n            );\r\n        } else {\r\n            this._exceptionListenerHandle = this._handleException.bind(\r\n                this,\r\n                true,\r\n                UNCAUGHT_EXCEPTION_HANDLER_NAME\r\n            );\r\n            this._rejectionListenerHandle = this._handleException.bind(\r\n                this,\r\n                false,\r\n                UNHANDLED_REJECTION_HANDLER_NAME\r\n            ); // never rethrows\r\n            (<any>process).on(\r\n                UNCAUGHT_EXCEPTION_HANDLER_NAME,\r\n                this._exceptionListenerHandle\r\n            );\r\n            (<any>process).on(\r\n                UNHANDLED_REJECTION_HANDLER_NAME,\r\n                this._rejectionListenerHandle\r\n            );\r\n        }\r\n    }\r\n\r\n    /** \r\n  * @deprecated This should not be used\r\n  */\r\n    public enable(isEnabled: boolean) {\r\n        // No Op\r\n    }\r\n\r\n\r\n    public shutdown() {\r\n        if (this._exceptionListenerHandle) {\r\n            if (this._canUseUncaughtExceptionMonitor) {\r\n                process.removeListener(\r\n                    UNCAUGHT_EXCEPTION_MONITOR_HANDLER_NAME,\r\n                    this._exceptionListenerHandle\r\n                );\r\n            } else {\r\n                if (this._exceptionListenerHandle) {\r\n                    process.removeListener(\r\n                        UNCAUGHT_EXCEPTION_HANDLER_NAME,\r\n                        this._exceptionListenerHandle\r\n                    );\r\n                }\r\n                if (this._rejectionListenerHandle) {\r\n                    process.removeListener(\r\n                        UNHANDLED_REJECTION_HANDLER_NAME,\r\n                        this._rejectionListenerHandle\r\n                    );\r\n                }\r\n            }\r\n            this._exceptionListenerHandle = undefined;\r\n            this._rejectionListenerHandle = undefined;\r\n            delete this._exceptionListenerHandle;\r\n            delete this._rejectionListenerHandle;\r\n        }\r\n    }\r\n\r\n    private _handleException(\r\n        reThrow: boolean,\r\n        name: ExceptionHandle,\r\n        error: Error | undefined = new Error(FALLBACK_ERROR_MESSAGE)\r\n    ) {\r\n        if (this._client) {\r\n            this._client.trackException({ exception: error });\r\n            this._client.flush();\r\n            // only rethrow when we are the only listener\r\n            if (reThrow && name && process.listeners(name as any).length === 1) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(error);\r\n                // eslint-disable-next-line no-process-exit\r\n                process.exit(1);\r\n            }\r\n        } else {\r\n            // eslint-disable-next-line no-console\r\n            console.error(error);\r\n            process.exit(1);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// regex to match stack frames from ie/chrome/ff\r\n// methodName=$2, fileName=$4, lineNo=$5, column=$6\r\nconst stackFramesRegex = /^(\\s+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\n]+):(\\d+):(\\d+)(\\)?)$/;\r\n\r\nexport class _StackFrame {\r\n    public sizeInBytes = 0;\r\n    public level: number;\r\n    public method: string;\r\n    public assembly: string;\r\n    public fileName: string;\r\n    public line: number;\r\n\r\n    private _baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n\r\n    constructor(frame: string, level: number) {\r\n        this.level = level;\r\n        this.method = \"<no_method>\";\r\n        this.assembly = Util.getInstance().trim(frame);\r\n        const matches = frame.match(stackFramesRegex);\r\n        if (matches && matches.length >= 5) {\r\n            this.method = Util.getInstance().trim(matches[2]) || this.method;\r\n            this.fileName = Util.getInstance().trim(matches[4]) || \"<no_filename>\";\r\n            this.line = parseInt(matches[5]) || 0;\r\n        }\r\n\r\n        this.sizeInBytes += this.method.length;\r\n        this.sizeInBytes += this.fileName.length;\r\n        this.sizeInBytes += this.assembly.length;\r\n\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        this.sizeInBytes += this._baseSize;\r\n        this.sizeInBytes += this.level.toString().length;\r\n        this.sizeInBytes += this.line.toString().length;\r\n    }\r\n}\r\n\r\nexport function parseStack(stack: any): _StackFrame[] {\r\n    let parsedStack: _StackFrame[] = undefined;\r\n    if (typeof stack === \"string\") {\r\n        const frames = stack.split(\"\\n\");\r\n        parsedStack = [];\r\n        let level = 0;\r\n\r\n        let totalSizeInBytes = 0;\r\n        for (let i = 0; i <= frames.length; i++) {\r\n            const frame = frames[i];\r\n            if (stackFramesRegex.test(frame)) {\r\n                const parsedFrame = new _StackFrame(frames[i], level++);\r\n                totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                parsedStack.push(parsedFrame);\r\n            }\r\n        }\r\n\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        const exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n            let left = 0;\r\n            let right = parsedStack.length - 1;\r\n            let size = 0;\r\n            let acceptedLeft = left;\r\n            let acceptedRight = right;\r\n\r\n            while (left < right) {\r\n                // check size\r\n                const lSize = parsedStack[left].sizeInBytes;\r\n                const rSize = parsedStack[right].sizeInBytes;\r\n                size += lSize + rSize;\r\n\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    const howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n\r\n    return parsedStack;\r\n}\r\n"]}