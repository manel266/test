{"version":3,"file":"bunyan.sub.js","sourceRoot":"","sources":["../../../../../src/shim/autoCollection/diagnostic-channel/bunyan.sub.ts"],"names":[],"mappings":";;;AAAA,4DAA4D;AAC5D,oFAAoF;AACpF,2DAAyE;AAEzE,+DAAqE;AAGrE,IAAI,OAAO,GAAsB,EAAE,CAAC;AAEpC,6GAA6G;AAC7G,MAAM,kBAAkB,GAA8B;IAClD,EAAE,EAAE,8BAAkB,CAAC,OAAO;IAC9B,EAAE,EAAE,8BAAkB,CAAC,OAAO;IAC9B,EAAE,EAAE,8BAAkB,CAAC,WAAW;IAClC,EAAE,EAAE,8BAAkB,CAAC,OAAO;IAC9B,EAAE,EAAE,8BAAkB,CAAC,KAAK;IAC5B,EAAE,EAAE,8BAAkB,CAAC,QAAQ;CAClC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,KAAyC,EAAE,EAAE;IAC7D,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAgB,CAAC;IAC5C,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;QACvB,IAAI;YACA,6CAA6C;YAC7C,MAAM,GAAG,GAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,GAAG,CAAC,GAAG,EAAE;gBACT,MAAM,CAAC,cAAc,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC9C,OAAO;aACV;SACJ;QAAC,OAAO,EAAE,EAAE;YACT,eAAe;SAClB;QACD,MAAM,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,MAAM,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,SAAgB,MAAM,CAAC,OAAgB,EAAE,MAAuB;IAC5D,IAAI,OAAO,EAAE;QACT,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC;QACvD,IAAI,YAAY,EAAE;YACd,OAAO;SACV;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,4BAAO,CAAC,SAAS,CAAqB,QAAQ,EAAE,UAAU,EAAE,+BAAU,CAAC,CAAC;SAC3E;QACD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxB;SAAM;QACH,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC;QAC9C,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACtB,4BAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC7C;KACJ;AACL,CAAC;AAhBD,wBAgBC;AAED,SAAgB,OAAO;IACnB,4BAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC1C,OAAO,GAAG,EAAE,CAAC;AACjB,CAAC;AAHD,0BAGC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nimport { channel, IStandardEvent, trueFilter } from \"diagnostic-channel\";\r\nimport { bunyan } from \"diagnostic-channel-publishers\";\r\nimport { KnownSeverityLevel } from \"../../../declarations/generated\";\r\nimport { TelemetryClient } from \"../../telemetryClient\";\r\n\r\nlet clients: TelemetryClient[] = [];\r\n\r\n// Mapping from bunyan levels defined at https://github.com/trentm/node-bunyan/blob/master/lib/bunyan.js#L256\r\nconst bunyanToAILevelMap: { [key: number]: string } = {\r\n    10: KnownSeverityLevel.Verbose,\r\n    20: KnownSeverityLevel.Verbose,\r\n    30: KnownSeverityLevel.Information,\r\n    40: KnownSeverityLevel.Warning,\r\n    50: KnownSeverityLevel.Error,\r\n    60: KnownSeverityLevel.Critical,\r\n};\r\n\r\nconst subscriber = (event: IStandardEvent<bunyan.IBunyanData>) => {\r\n    const message = event.data.result as string;\r\n    clients.forEach((client) => {\r\n        try {\r\n            // Try to parse message as Bunyan log is JSON\r\n            const log: any = JSON.parse(message);\r\n            if (log.err) {\r\n                client.trackException({ exception: log.err });\r\n                return;\r\n            }\r\n        } catch (ex) {\r\n            // Ignore error\r\n        }\r\n        const AIlevel = bunyanToAILevelMap[event.data.level];\r\n        client.trackTrace({ message: message, severity: AIlevel });\r\n    });\r\n};\r\n\r\nexport function enable(enabled: boolean, client: TelemetryClient) {\r\n    if (enabled) {\r\n        const handlerFound = clients.find((c) => c === client);\r\n        if (handlerFound) {\r\n            return;\r\n        }\r\n        if (clients.length === 0) {\r\n            channel.subscribe<bunyan.IBunyanData>(\"bunyan\", subscriber, trueFilter);\r\n        }\r\n        clients.push(client);\r\n    } else {\r\n        clients = clients.filter((c) => c !== client);\r\n        if (clients.length === 0) {\r\n            channel.unsubscribe(\"bunyan\", subscriber);\r\n        }\r\n    }\r\n}\r\n\r\nexport function dispose() {\r\n    channel.unsubscribe(\"bunyan\", subscriber);\r\n    clients = [];\r\n}\r\n"]}