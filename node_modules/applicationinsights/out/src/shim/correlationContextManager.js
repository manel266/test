"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CorrelationContextManager = void 0;
class CorrelationContextManager {
    /**
     *  Provides the current Context.
     *  The context is the most recent one entered into for the current
     *  logical chain of execution, including across asynchronous calls.
     */
    getCurrentContext() {
        throw new Error("Not implemented");
    }
    /**
     *  A helper to generate objects conforming to the CorrelationContext interface
     */
    generateContextObject(operationId, parentId, operationName, correlationContextHeader, traceparent, tracestate) {
        throw new Error("Not implemented");
    }
    /**
     *  Runs a function inside a given Context.
     *  All logical children of the execution path that entered this Context
     *  will receive this Context object on calls to GetCurrentContext.
     */
    runWithContext(context, fn) {
        throw new Error("Not implemented");
    }
    /**
     * Wrapper for cls-hooked bindEmitter method
     */
    wrapEmitter(emitter) {
        throw new Error("Not implemented");
    }
    /**
     *  Patches a callback to restore the correct Context when getCurrentContext
     *  is run within it. This is necessary if automatic correlation fails to work
     *  with user-included libraries.
     *
     *  The supplied callback will be given the same context that was present for
     *  the call to wrapCallback.  */
    wrapCallback(fn, context) {
        throw new Error("Not implemented");
    }
    /**
     *  Enables the CorrelationContextManager.
     */
    enable(forceClsHooked) {
        throw new Error("Not implemented");
    }
    /**
     * Create new correlation context.
     */
    startOperation(context, request) {
        throw new Error("Not implemented");
    }
    /**
     *  Disables the CorrelationContextManager.
     */
    disable() {
        throw new Error("Not implemented");
    }
    /**
     * Reset the namespace
     */
    reset() {
        throw new Error("Not implemented");
    }
}
exports.CorrelationContextManager = CorrelationContextManager;
//# sourceMappingURL=correlationContextManager.js.map