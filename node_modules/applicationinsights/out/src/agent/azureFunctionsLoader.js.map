{"version":3,"file":"azureFunctionsLoader.js","sourceRoot":"","sources":["../../../src/agent/azureFunctionsLoader.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAElC,wDAAoD;AACpD,+CAA4C;AAC5C,qEAAkE;AAClE,6DAA0D;AAC1D,qFAAkF;AAClF,mCAAgF;AAEhF,8EAAiF;AAEjF,MAAa,oBAAqB,SAAQ,yBAAW;IAEjD;QACI,KAAK,EAAE,CAAC;QACR,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,kCAAkC;YAClC,IAAI,CAAC,QAAQ,CAAC,4BAA4B,GAAG,KAAK,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,gCAAgC,GAAG,KAAK,CAAC;YACvD,MAAM,kBAAkB,GAAe,EAAE,CAAC;YAC1C,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE;gBAC/B,kBAAkB,CAAC,iDAA0B,CAAC,YAAY,CAAC;oBACvD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;aACrC;YACD,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE;gBACjC,kBAAkB,CAAC,iDAA0B,CAAC,mBAAmB,CAAC;oBAC9D,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;aACvC;YACD,MAAM,QAAQ,GAAG,IAAI,oBAAQ,CAAC,kBAAkB,CAAC,CAAC;YAClD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAElC,MAAM,MAAM,GAAG,IAAI,2CAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAClE,IAAI,CAAC,iBAAiB,GAAG,IAAI,mCAAgB,CAAC,IAAI,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;YAChF,IAAI,CAAC,aAAa,GAAG,IAAI,2BAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;YACxE,OAAO,CAAC,GAAG,CAAC,kCAA0B,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAC5D,iCAAyB,CAAC,cAAc,CAC3C,CAAC;SACL;IACL,CAAC;CACJ;AA5BD,oDA4BC","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport { Resource } from \"@opentelemetry/resources\";\r\nimport { AgentLoader } from \"./agentLoader\";\r\nimport { DiagnosticLogger } from \"./diagnostics/diagnosticLogger\";\r\nimport { StatusLogger } from \"./diagnostics/statusLogger\";\r\nimport { AzureFunctionsWriter } from \"./diagnostics/writers/azureFunctionsWriter\";\r\nimport { AgentResourceProviderType, AZURE_MONITOR_AGENT_PREFIX } from \"./types\";\r\nimport { Attributes } from \"@opentelemetry/api\";\r\nimport { SemanticResourceAttributes } from \"@opentelemetry/semantic-conventions\";\r\n\r\nexport class AzureFunctionsLoader extends AgentLoader {\r\n    \r\n    constructor() {\r\n        super();\r\n        if (this._canLoad) {\r\n            // Azure Fn specific configuration\r\n            this._options.enableAutoCollectPerformance = false;\r\n            this._options.enableAutoCollectStandardMetrics = false;\r\n            const resourceAttributes: Attributes = {};\r\n            if (process.env.WEBSITE_SITE_NAME) {\r\n                resourceAttributes[SemanticResourceAttributes.SERVICE_NAME] =\r\n                    process.env.WEBSITE_SITE_NAME;\r\n            }\r\n            if (process.env.WEBSITE_INSTANCE_ID) {\r\n                resourceAttributes[SemanticResourceAttributes.SERVICE_INSTANCE_ID] =\r\n                    process.env.WEBSITE_INSTANCE_ID;\r\n            }\r\n            const resource = new Resource(resourceAttributes);\r\n            this._options.resource = resource;\r\n\r\n            const writer = new AzureFunctionsWriter(this._instrumentationKey);\r\n            this._diagnosticLogger = new DiagnosticLogger(this._instrumentationKey, writer);\r\n            this._statusLogger = new StatusLogger(this._instrumentationKey, writer);\r\n            process.env[AZURE_MONITOR_AGENT_PREFIX] = this._getVersionPrefix(\r\n                AgentResourceProviderType.azureFunctions\r\n            );\r\n        }\r\n    }\r\n}\r\n"]}