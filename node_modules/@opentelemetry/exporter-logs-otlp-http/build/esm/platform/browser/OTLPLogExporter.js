/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { __assign, __extends } from "tslib";
import { OTLPExporterBrowserBase } from '@opentelemetry/otlp-exporter-base';
import { baggageUtils, getEnv } from '@opentelemetry/core';
import { createExportLogsServiceRequest } from '@opentelemetry/otlp-transformer';
import { getDefaultUrl } from '../config';
/**
 * Collector Logs Exporter for Web
 */
var OTLPLogExporter = /** @class */ (function (_super) {
    __extends(OTLPLogExporter, _super);
    function OTLPLogExporter(config) {
        if (config === void 0) { config = {}; }
        var _this = 
        // load  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT env var
        _super.call(this, __assign({ timeoutMillis: getEnv().OTEL_EXPORTER_OTLP_LOGS_TIMEOUT }, config)) || this;
        _this._headers = __assign(__assign({}, _this._headers), baggageUtils.parseKeyPairsIntoRecord(getEnv().OTEL_EXPORTER_OTLP_LOGS_HEADERS));
        return _this;
    }
    OTLPLogExporter.prototype.convert = function (logRecords) {
        return createExportLogsServiceRequest(logRecords, true);
    };
    OTLPLogExporter.prototype.getDefaultUrl = function (config) {
        return getDefaultUrl(config);
    };
    return OTLPLogExporter;
}(OTLPExporterBrowserBase));
export { OTLPLogExporter };
//# sourceMappingURL=OTLPLogExporter.js.map