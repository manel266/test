// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { context } from "@opentelemetry/api";
import { ExportResultCode, suppressTracing } from "@opentelemetry/core";
import { resourceMetricsToEnvelope } from "../../utils/metricUtils";
import { AzureMonitorBaseExporter } from "../base";
/**
 * Azure Monitor Statsbeat Exporter
 */
export class AzureMonitorStatsbeatExporter extends AzureMonitorBaseExporter {
    /**
     * Initializes a new instance of the AzureMonitorStatsbeatExporter class.
     * @param options - Exporter configuration
     */
    constructor(options) {
        super(options, true);
        /**
         * Flag to determine if the Exporter is shutdown.
         */
        this._isShutdown = false;
    }
    /**
     * Export Statsbeat metrics.
     */
    async export(metrics, resultCallback) {
        if (this._isShutdown) {
            setTimeout(() => resultCallback({ code: ExportResultCode.FAILED }), 0);
            return;
        }
        let envelopes = resourceMetricsToEnvelope(metrics, this._instrumentationKey, true // isStatsbeat flag passed to create a Statsbeat envelope.
        );
        // Supress tracing until OpenTelemetry Metrics SDK support it
        context.with(suppressTracing(context.active()), async () => {
            resultCallback(await this._exportEnvelopes(envelopes));
        });
    }
    /**
     * Shutdown AzureMonitorStatsbeatExporter.
     */
    async shutdown() {
        this._isShutdown = true;
        return this._shutdown();
    }
    /**
     * Force flush.
     */
    async forceFlush() {
        return Promise.resolve();
    }
}
//# sourceMappingURL=statsbeatExporter.js.map