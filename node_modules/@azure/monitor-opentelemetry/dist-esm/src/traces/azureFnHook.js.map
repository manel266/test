{"version":3,"file":"azureFnHook.js","sourceRoot":"","sources":["../../../src/traces/azureFnHook.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAGlC,OAAO,EACL,OAAO,EACP,WAAW,EACX,YAAY,GAEb,MAAM,oBAAoB,CAAC;AAC5B,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAE3C,MAAM,OAAO,kBAAkB;IAI7B;QACE,IAAI;YACF,gDAAgD;YAChD,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC7D,0FAA0F;YAC1F,0DAA0D;YAC1D,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,EAAE,CAAC;YACtE,IAAI,aAAa,CAAC,IAAI,KAAK,kBAAkB,IAAI,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBACvF,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;iBAAM;gBACL,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CACxB,8CAA8C,aAAa,CAAC,IAAI,cAAc,aAAa,CAAC,OAAO,GAAG,CACvG,CAAC;aACH;SACF;QAAC,OAAO,KAAK,EAAE;YACd,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CACxB,sEAAsE,CACvE,CAAC;SACH;IACH,CAAC;IAEM,QAAQ;QACb,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;SACrC;QACD,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;IACxC,CAAC;IAEO,qBAAqB;QAC3B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAC9D,eAAe,EACf,KAAK,EAAE,oBAAyB,EAAE,EAAE;gBAClC,MAAM,GAAG,GAAmC,oBAAoB,CAAC,iBAAiB,CAAC;gBACnF,4CAA4C;gBAC5C,IAAI,gBAAgB,GAA+B,IAAI,CAAC;gBACxD,IAAI;oBACF,IAAI,GAAG,CAAC,YAAY,EAAE;wBACpB,gBAAgB,GAAG,WAAW,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;qBACxE;oBACD,MAAM,cAAc,GAAG,gBAAgB,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;oBAC5D,oBAAoB,CAAC,gBAAgB,GAAG,OAAO,CAAC,IAAI,CAClD,cAAc,EACd,oBAAoB,CAAC,gBAAgB,CACtC,CAAC;iBACH;gBAAC,OAAO,GAAG,EAAE;oBACZ,MAAM,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,gDAAgD,EAAE,GAAG,CAAC,CAAC;iBACnF;YACH,CAAC,CACF,CAAC;SACH;IACH,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Context as AzureFnContext } from \"@azure/functions\";\nimport {\n  context,\n  propagation,\n  ROOT_CONTEXT,\n  Context as OpenTelemetryContext,\n} from \"@opentelemetry/api\";\nimport { Logger } from \"../shared/logging\";\n\nexport class AzureFunctionsHook {\n  private _functionsCoreModule: any;\n  private _preInvocationHook: any;\n\n  constructor() {\n    try {\n      // TODO: Add types files when publicly available\n      this._functionsCoreModule = require(\"@azure/functions-core\");\n      // Only v3 of Azure Functions library is supported right now. See matrix of versions here:\n      // https://github.com/Azure/azure-functions-nodejs-library\n      const funcProgModel = this._functionsCoreModule.getProgrammingModel();\n      if (funcProgModel.name === \"@azure/functions\" && funcProgModel.version.startsWith(\"3.\")) {\n        this._addPreInvocationHook();\n      } else {\n        Logger.getInstance().debug(\n          `AzureFunctionsHook does not support model \"${funcProgModel.name}\" version \"${funcProgModel.version}\"`\n        );\n      }\n    } catch (error) {\n      Logger.getInstance().debug(\n        \"@azure/functions-core failed to load, not running in Azure Functions\"\n      );\n    }\n  }\n\n  public shutdown() {\n    if (this._preInvocationHook) {\n      this._preInvocationHook.dispose();\n      this._preInvocationHook = undefined;\n    }\n    this._functionsCoreModule = undefined;\n  }\n\n  private _addPreInvocationHook() {\n    if (!this._preInvocationHook) {\n      this._preInvocationHook = this._functionsCoreModule.registerHook(\n        \"preInvocation\",\n        async (preInvocationContext: any) => {\n          const ctx: AzureFnContext = <AzureFnContext>preInvocationContext.invocationContext;\n          // Update context to use Azure Functions one\n          let extractedContext: OpenTelemetryContext | any = null;\n          try {\n            if (ctx.traceContext) {\n              extractedContext = propagation.extract(ROOT_CONTEXT, ctx.traceContext);\n            }\n            const currentContext = extractedContext || context.active();\n            preInvocationContext.functionCallback = context.bind(\n              currentContext,\n              preInvocationContext.functionCallback\n            );\n          } catch (err) {\n            Logger.getInstance().error(\"Failed to propagate context in Azure Functions\", err);\n          }\n        }\n      );\n    }\n  }\n}\n"]}